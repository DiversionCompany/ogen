// Code generated by ogen, DO NOT EDIT.

package api

import (
	"io"
	"net/http"

	"github.com/go-faster/errors"

	"github.com/ogen-go/ogen/validate"
)

func decodeDisjointSecurityResponse(resp *http.Response) (res *DisjointSecurityOK, _ error) {
	switch resp.StatusCode {
	case 200:
		// Code 200.
		return &DisjointSecurityOK{}, nil
	}
	err := validate.UnexpectedStatusCode(resp.StatusCode)
	if buf, bodyErr := io.ReadAll(resp.Body); bodyErr == nil {
		err = errors.Wrapf(err, "request failed: %s", string(buf))
	}
	return res, err
}

func decodeIntersectSecurityResponse(resp *http.Response) (res *IntersectSecurityOK, _ error) {
	switch resp.StatusCode {
	case 200:
		// Code 200.
		return &IntersectSecurityOK{}, nil
	}
	err := validate.UnexpectedStatusCode(resp.StatusCode)
	if buf, bodyErr := io.ReadAll(resp.Body); bodyErr == nil {
		err = errors.Wrapf(err, "request failed: %s", string(buf))
	}
	return res, err
}

func decodeOptionalSecurityResponse(resp *http.Response) (res *OptionalSecurityOK, _ error) {
	switch resp.StatusCode {
	case 200:
		// Code 200.
		return &OptionalSecurityOK{}, nil
	}
	err := validate.UnexpectedStatusCode(resp.StatusCode)
	if buf, bodyErr := io.ReadAll(resp.Body); bodyErr == nil {
		err = errors.Wrapf(err, "request failed: %s", string(buf))
	}
	return res, err
}
